name: Continuous integration

on:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - "README.md"
      - Dockerfile
  pull_request:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - Dockerfile

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.8.2
  SQLX_FEATURES: "rustls,postgres"
  APP.DATABASE.USERNAME: postgres
  APP.DATABASE.PASSWORD: password

jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt

      - name: Install sqlx-cli
        run: cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Lint with clippy
        run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings

      - name: Run tests
        run: cargo nextest run --all-features

      - name: Check that queries are fresh
        run: cargo sqlx prepare --workspace --check -- --all-targets

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        if: startsWith(github.ref, 'refs/tags/')
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ steps.git-cliff.outputs.content }}
